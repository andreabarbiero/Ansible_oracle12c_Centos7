- name: Installazione di Oracle 12c su CentOS 7
  hosts: centos12c
  vars_files: vars.yml
  tasks:  
    - name: permetto il traffico nella default zone sulla porta 1521/tcp
      ansible.posix.firewalld:
        port: 1521/tcp
        permanent: yes
        immediate: yes
        state: enabled
    
    - name: cambio la default zone quindi disabilito public
      ansible.posix.firewalld:
        zone: public
        interface: "ens33"
        permanent: yes
        immediate: yes
        state: disabled

    - name: setto home come default zone
      ansible.posix.firewalld:
        zone: home
        interface: "ens33"
        permanent: yes
        immediate: yes
        state: enabled

    - name: permetto il traffico nella default zone sulla porta 1521/tcp
      ansible.posix.firewalld:
        zone: home
        port: 1521/tcp
        permanent: yes
        immediate: yes
        state: enabled

    - name: Effettuo il reload completo del firewall
      ansible.builtin.shell: firewall-cmd --complete-reload

    - name: Salvo la regola su iptables
      ansible.builtin.shell: iptables-save | grep 1521

    - name: Installo i software necessari
      ansible.builtin.yum:
        name:
          - binutils.x86_64 
          - compat-libcap1.x86_64 
          - gcc.x86_64 
          - gcc-c++.x86_64 
          - glibc.i686 
          - glibc.x86_64
          - glibc-devel.i686 
          - glibc-devel.x86_64 
          - ksh 
          - compat-libstdc++-33 
          - libaio.i686 
          - libaio.x86_64 
          - libaio-devel.i686 
          - libaio-devel.x86_64 
          - libgcc.i686 
          - libgcc.x86_64 
          - libstdc++.i686 
          - libstdc++.x86_64 
          - libstdc++-devel.i686 
          - libstdc++-devel.x86_64 
          - libXi.i686 
          - libXi.x86_64
          - libXtst.i686 
          - libXtst.x86_64 
          - make.x86_64 
          - sysstat.x86_64 
          - wget 
          - unzip 
          - net-tools 
          - smartmontools 
          - unixODBC 
          - unixODBC-devel 
          - elfutils-libelf-devel
        state: present

    - name: Creo il gruppo oinstall e gli assegno il gid 1001
      ansible.builtin.group:
        name: oinstall
        state: present
        gid: 1001
    
    - name: Creo il gruppo dba e gli assegno il gid 1002
      ansible.builtin.group:
        name: dba
        state: present
        gid: 1002

    - name: Creo l'utente Oracle e lo aggiungo al gruppo oinstall e dba
      ansible.builtin.user:
        name: oracle
        comment: oracle
        shell: /bin/bash
        uid: 1001
        group: oinstall
        groups: dba

    - name: Assegno una password all'utente oracle
      ansible.builtin.shell: echo "oracle:oracle" | chpasswd

    - name: Aggiungo i seguenti parametri in /etc/sysctl.conf
      ansible.builtin.shell: |
        echo 'kernel.sem = 250 32000 100 128' >> /etc/sysctl.conf
        echo 'kernel.shmmax = 8589934592 #8GB' >> /etc/sysctl.conf
        echo 'net.core.rmem_default = 262144' >> /etc/sysctl.conf
        echo 'net.core.rmem_max = 4194304' >> /etc/sysctl.conf
        echo 'net.core.wmem_default = 262144' >> /etc/sysctl.conf
        echo 'net.core.wmem_max = 1048576' >> /etc/sysctl.conf
        echo 'fs.aio-max-nr = 1048576' >> /etc/sysctl.conf
        echo 'fs.file-max = 6815744' >> /etc/sysctl.conf
        echo 'vm.hugetlb_shm_group = 1001' >> /etc/sysctl.conf
      args:
        executable: /usr/bin/bash

    - name: Modifico il file /etc/security/limits.conf aggiungendo i seguenti parametri
      ansible.builtin.shell: |
        echo '--shell limits for users oracle' >> /etc/security/limits.conf
        echo 'oracle soft nofile 1024' >> /etc/security/limits.conf
        echo 'oracle hard nofile 65536' >> /etc/security/limits.conf
        echo 'oracle soft nproc 2047' >> /etc/security/limits.conf
        echo 'oracle hard nproc 16384' >> /etc/security/limits.conf
        echo 'oracle soft stack 10240' >> /etc/security/limits.conf
        echo 'oracle hard stack 32768' >> /etc/security/limits.conf        
      args:
        executable: /usr/bin/bash

    - name: Disabilito momentaneamente la SELINUX
      ansible.builtin.shell: sed -i 's|SELINUX=enforcing|SELINUX=disabled|g' /etc/selinux/config

    - name: Aggiungo quanto segue ad /etc/profile
      ansible.builtin.shell: |
        cat <<EOT >> /etc/profile
        if [ $USER = "oracle" ]; then
          if [ $SHELL = "/bin/ksh" ]; then
            ulimit -p 16384
            ulimit -n 65536
          else
            ulimit -u 16384 -n 65536
          fi
        fi
        EOT        
      args:
        executable: /usr/bin/bash

    - name: Creo i path per l'installazione
      file:
        path: /u01
        state: directory
        mode: '0755'
    
    - name: Assegno l'utente oracle come proprietario del path e come gruppo oinstall in modo recursivo tramite -R
      ansible.builtin.file:
        path: /u01
        state: directory
        recurse: yes
        owner: oracle
        group: oinstall
    
    - name: Unarchive a file that needs to be downloaded (added in 2.0)
      ansible.builtin.unarchive:
        src: "http://{{ ip_address_http_server }}:8000/linuxx64_12201_database.zip"
        dest: /home/oracle
        remote_src: yes

    - name: Assegno l'utente oracle come proprietario del path e come gruppo oinstall in modo recursivo tramite -R
      ansible.builtin.file:
        path: /home/oracle
        state: directory
        recurse: yes
        owner: oracle
        group: oinstall

    - name: Scrivo le variabili d'ambiente per iniziare l'installazione
      ansible.builtin.shell: |
        cat <<EOT >> /home/oracle/.bash_profile
        export ORACLE_BASE=/u01/app/oracle
        unset ORACLE_HOME
        unset TNS_ADMIN
        EOT      
      args:
        executable: /usr/bin/bash
    
    - name: Modifico tramite sed il file con i parametri per l'installazione
      ansible.builtin.shell: |
        sed -i 's/oracle.install.option=/oracle.install.option=INSTALL_DB_SWONLY/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/UNIX_GROUP_NAME=/UNIX_GROUP_NAME=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's|INVENTORY_LOCATION=|INVENTORY_LOCATION=/u01/app/oraInventory|g' /home/oracle/database/response/db_install.rsp
        sed -i 's|ORACLE_HOME=|ORACLE_HOME=/u01/app/oracle/product/12.2.0/dbhome_1|g' /home/oracle/database/response/db_install.rsp
        sed -i 's|ORACLE_BASE=|ORACLE_BASE=/u01/app/oracle/product|g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.InstallEdition=/oracle.install.db.InstallEdition=EE/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSDBA_GROUP=/oracle.install.db.OSDBA_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSOPER_GROUP=/oracle.install.db.OSOPER_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSBACKUPDBA_GROUP=/oracle.install.db.OSBACKUPDBA_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSDGDBA_GROUP=/oracle.install.db.OSDGDBA_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSKMDBA_GROUP=/oracle.install.db.OSKMDBA_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/oracle.install.db.OSRACDBA_GROUP=/oracle.install.db.OSRACDBA_GROUP=oinstall/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/SECURITY_UPDATES_VIA_MYORACLESUPPORT=/SECURITY_UPDATES_VIA_MYORACLESUPPORT=false/g' /home/oracle/database/response/db_install.rsp
        sed -i 's/DECLINE_SECURITY_UPDATES=/DECLINE_SECURITY_UPDATES=true/g' /home/oracle/database/response/db_install.rsp   
      args:
        executable: /usr/bin/bash

    - name: Da utente Oracle lancio l'installazione
      ansible.builtin.shell: |
        su - oracle<<EOF
        ./database/runInstaller -silent -responseFile /home/oracle/database/response/db_install.rsp -ignoreSysPrereqs -showProgress
        sleep 3m
        exit
        EOF
      args:
        executable: /usr/bin/bash

    - name: Eseguo gli script indicati durante l'installazione di oracle12c
      ansible.builtin.shell: |
        /u01/app/oraInventory/orainstRoot.sh
        /u01/app/oracle/product/12.2.0/dbhome_1/root.sh        
      args:
        executable: /usr/bin/bash

    - name: Imposto le variabili d'ambiente definitive per l'utente oracle
      ansible.builtin.shell: |
        sed -i 's|unset ORACLE_HOME||g' /home/oracle/.bash_profile
        sed -i 's/unset TNS_ADMIN//g' /home/oracle/.bash_profile      
        cat <<EOT >> /home/oracle/.bash_profile
        export ORACLE_BASE=/u01/app/oracle
        export ORACLE_HOME=/u01/app/oracle/product/12.2.0/dbhome_1
        export ORACLE_SID="{{ SID }}"
        export ORATAB=/etc/oratab
        export NLS_LANG=AMERICAN_AMERICA.WE8ISO8859P1
        export TZ=Europe/Rome
        unset TNS_ADMIN
        export PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/u01/app/oracle/product/12.2.0/dbhome_1/bin
        EOT
      args:
        executable: /usr/bin/bash

    - name: Lancio il comando per la creazione del database
      ansible.builtin.shell: |
        su - oracle<<EOF
        dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbName "{{ SID }}" -sid "{{ SID }}" -createAsContainerDatabase false -emConfiguration NONE -sysPassword "{{ SYS_PASS }}" -systemPassword "{{ SYSTEM_PASS }}" -datafileDestination /u01/app/oradata -storageType FS -characterSet AL32UTF8 -totalMemory 2048 -recoveryAreaDestination /u01/FRA -sampleSchema true
        EOF
      args:
        executable: /usr/bin/bash  

    - name: Avvio il listener
      ansible.builtin.shell: runuser -l oracle -c 'lsnrctl start'

    - name: Verifico la connessione al DB
      ansible.builtin.shell: |
        runuser -l oracle -c 'sqlplus /nolog<<EOF
        connect /as sysdba'
      args:
        executable: /usr/bin/bash

    - name: Attendo che l'istanza sia UP
      ansible.builtin.shell: |
        echo 'Ci siamo quasi...'
        sleep 2m
        echo 'Ok, ora puoi provare a connetterti al DB'
      args:
        executable: /usr/bin/bash

